interface Efl.Ui.Multi_Selectable_Object_Range extends Efl.Ui.Multi_Selectable
{
   [[Interface for getting access to a range of selected items.

     The implementor of this interface provides the possibility to select multiple Selectables.
     If not, only @Efl.Ui.Single_Selectable should be implemented.
     A widget can only provide either this interface or @Efl.Ui.Multi_Selectable_Index_Range, but not both.

     @since 1.24
   ]]
   c_prefix: efl_ui_multi_selectable;
   methods
   {
      selected_iterator_new {
         [[Get the selected items in an iterator. The iterator sequence will be decided by selection.]]
         return: iterator<Efl.Ui.Selectable> @move @no_unused; [[User has to free the iterator after usage.]]
      }
      range_select @beta {
         [[Select a range of @Efl.Ui.Selectable.

           This will select the range of @Efl.Ui.Selectable objects from $a to $b or from $b to $a depending on
           which one comes first.
           If $a or $b are not part of the widget, an error is returned, and no change is applied.
           $NULL is not allowed as either of the parameters.
           Both of the passed values will also be selected.
         ]]
         params {
           a : Efl.Ui.Selectable; [[One side of the range.]]
           b : Efl.Ui.Selectable; [[The other side of the range.]]
         }
      }
      range_unselect @beta {
         [[Unselect a range of @Efl.Ui.Selectable.

           This will unselect the range of @Efl.Ui.Selectable objects from $a to $b or from $b to $a depending on
           which one comes first.
           If $a or $b are not part of the widget, an error is returned, and no change is applied.
           $NULL is not allowed as either of the parameters.
           Both of the passed values will also be unselected.
         ]]
         params {
           a : Efl.Ui.Selectable; [[One side of the range.]]
           b : Efl.Ui.Selectable; [[The other side of the range.]]
         }
      }
   }
}
